spring: #http://localhost:8080/h2-console
   #profiles:
     #active: dev
   jpa:
      show-sql: true
      defer-datasource-initialization: true
      #Spring Boot 3.1 upgrades to Hibernate 6.2, so upgrading SB to 3.1.x fixes strategy = GenerationType.AUTO      
      properties:
        hibernate:
           dialect: org.hibernate.dialect.H2Dialect
           hql.bulk_id_strategy.global_temporary.create_tables: false
           hql.bulk_id_strategy.global_temporary.drop_tables: false      
      hibernate:
        ddl-auto: update
#        default_schema: oracleuser
      #properties.hibernate.default_schema: oracleuser
      #database-platform: org.hibernate.dialect.PostgreSQLDialect
      #spring.datasource.hikari.schema=schema
   datasource:
      #url: jdbc:h2:mem:test_db;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS oracleuser
      #url: jdbc:h2:mem:test_db;MODE=ORACLE;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS oracleuser
      url: jdbc:h2:mem:test_db;MODE=ORACLE;DB_CLOSE_DELAY=-1;
      driverClassName: org.h2.Driver
      username: sa
      password: password
      #hikari.schema: oracleuser
      entity-package: com.archetype.app.infrastructure.out.db.jpa.entity
      repository-package: com.archetype.app.infrastructure.out.db.jpa.repository
   #datasource-secondary:
    #driverClassName: org.h2.Driver
    #url: jdbc:h2:mem:test_db;MODE=ORACLE;DB_CLOSE_DELAY=-1
    #username: sa
    #password: password
    #dialect: org.hibernate.dialect.H2Dialect
    #ddl-auto: update
   sql:
    init:
      mode: always
      continue-on-error: true
      #schema-locations: oracleuser
      #data-locations: classpath:db/data.sql
   h2:
      console:
         enabled: true  